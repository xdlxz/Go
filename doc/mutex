关于mutex的演进

阶段一 先到先得
先来的加锁请求会先获取到锁；
如果获取不到锁，就用semphore阻塞goroutine，等有人释放锁了，在被唤醒

阶段二 公平竞争
对于初版的设计，新来的 goroutine也有机会先获取到锁，甚至一个goroutine可能连续获取到锁，打破了先来先得的逻辑。
新来的goroutine跟唤醒的goroutine同时竞争锁

阶段三 自旋
允许spin一段时间等待锁释放，即通过spin增加抢锁得次数，避免太多调度

阶段四 饥饿问题
新来的goroutine也会参会竞争，极端情况下等待中的goroutine可能会一直获取不到锁

阶段五 解决饥饿问题
等锁的goroutine等待超过一定时间（<1ms），就会进入饥饿模式，优先让等待者先获取锁，保证
抢锁更公平


